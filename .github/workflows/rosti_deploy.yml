name: Deploy Apollo Server to Roští.cz

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HOST: ssh.rosti.cz
      USER: app
      PORT: 14164
      NODE_VERSION: 23.6.0
      DB_SSH_TUNNEL_PORT: 3307  # Port pro lokální SSH tunel k MySQL

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "v23.6.0"

    # 📌 Nastavení SSH klíče pro DEPLOY
    - name: Setup Deploy SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.ROSTI_DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa_rosti
        chmod 600 ~/.ssh/id_rsa_rosti
        ssh-keyscan -p $PORT $HOST >> ~/.ssh/known_hosts
        echo "SSH Deploy key setup completed."

    # 📌 Nastavení SSH klíče pro TUNEL
    - name: Setup Tunnel SSH key
      run: |
        echo "${{ secrets.ROSTI_TUNNEL_SSH_KEY }}" > ~/.ssh/id_rsa_tunnel
        chmod 600 ~/.ssh/id_rsa_tunnel
        ssh-keyscan -p $PORT $HOST >> ~/.ssh/known_hosts
        echo "SSH Tunnel key setup completed."
    
    - name: Debug SSH Keys
      run: ls -lah ~/.ssh/

    - name: Create .env file
      run: |
        echo "${{ secrets.ENV }}" > .env

    - name: Install dependencies
      run: |
        npm install

    # 📌 **Používáme pouze `id_rsa_tunnel` pro SSH tunel**
    - name: Setup SSH tunnel for MySQL
      run: |
        ssh -i ~/.ssh/id_rsa_tunnel -f -N -L 127.0.0.1:$DB_SSH_TUNNEL_PORT:store6.rosti.cz:3306 -p $PORT $USER@$HOST
        echo "SSH tunnel for MySQL is running on 127.0.0.1:$DB_SSH_TUNNEL_PORT"

    # 📌 **Používáme `id_rsa_rosti` pro nasazení kódu**
    - name: Setup Node.js on Roští
      run: |
        ssh -i ~/.ssh/id_rsa_rosti -o UserKnownHostsFile=./known_hosts -p $PORT $USER@$HOST /usr/local/bin/rosti node $NODE_VERSION

    - name: Copy project files
      run: |
        rsync -ae "ssh -i ~/.ssh/id_rsa_rosti -o UserKnownHostsFile=./known_hosts -p $PORT" --delete-after --exclude=.git ./ $USER@$HOST:/srv/app/

    - name: Setup Supervisord for Apollo Server
      run: |
        cat << EOF > rosti.app.conf
        [program:apollo]
        command=node index.js
        environment=PATH="/srv/bin/primary_tech:/usr/local/bin:/usr/bin:/bin:/srv/.npm-packages/bin"
        stopasgroup=true
        directory=/srv/app
        process_name=apollo
        autostart=true
        autorestart=true
        stdout_logfile=/srv/log/apollo.log
        stdout_logfile_maxbytes=2MB
        stdout_logfile_backups=5
        stdout_capture_maxbytes=2MB
        stdout_events_enabled=false
        redirect_stderr=true
        EOF
        scp -i ~/.ssh/id_rsa_rosti -o UserKnownHostsFile=./known_hosts -P $PORT rosti.app.conf $USER@$HOST:/srv/conf/supervisor.d/apollo.conf
        rm rosti.app.conf

    - name: Setup Nginx Proxy for Apollo Server
      run: |
        cat << EOF > rosti.nginx.conf
        server {
            listen 0.0.0.0:8000;
            listen [::]:8000;
            location / {
                proxy_pass http://127.0.0.1:4000/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade \$http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host \$host;
                proxy_cache_bypass \$http_upgrade;
            }
        }        
        EOF
        scp -i ~/.ssh/id_rsa_rosti -o UserKnownHostsFile=./known_hosts -P $PORT rosti.nginx.conf $USER@$HOST:/srv/conf/nginx.d/app.conf
        rm rosti.nginx.conf

    - name: Restart services
      run: |
        ssh -i ~/.ssh/id_rsa_rosti -o UserKnownHostsFile=./known_hosts -p $PORT $USER@$HOST supervisorctl reread
        ssh -i ~/.ssh/id_rsa_rosti -o UserKnownHostsFile=./known_hosts -p $PORT $USER@$HOST supervisorctl restart apollo
        ssh -i ~/.ssh/id_rsa_rosti -o UserKnownHostsFile=./known_hosts -p $PORT $USER@$HOST supervisorctl restart nginx
